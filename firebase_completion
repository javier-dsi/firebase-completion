# vim: ft=sh 
# 
#     _____           __                  
#    / __(_)_______  / /_  ____ _________ 
#   / /_/ / ___/ _ \/ __ \/ __ `/ ___/ _ \
#  / __/ / /  /  __/ /_/ / /_/ (__  )  __/
# /_/ /_/_/   \___/_.___/\__,_/____/\___/ 
#                                         
#
#                      
_firebase() {
  local cur prev opts base breaks  
  _get_comp_words_by_ref -n : cur

  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

	commands="use -P --token --project -j --json tools:migrate --debug --interactive --non-interactive deploy init open list login logout -h -v database:get database:set database:push database:remove database:update database:profile deploy deploy:hosting deploy:rules hosting:disable login:ci serve help functions:log functions:config:clone functions:config:get functions:config:set functions:config:unset auth:import auth:export setup:web" 

	case "${prev}" in
    init )
      args="-h --help " 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    --token)
      args="--help -h -y"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    auth:import)
      args="--help -h --hash-algo --hash-key --salt-separator --rounds --mem-cost"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    auth:export)
      args="--help -h --format"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    functions:log)
      args="--help -h -only --lines -n --open"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    tools:migrate)
      args="--help -h -y --confirm"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    deploy )
      args="--help -h -m --message -p --public --only"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    delete-site ) 
      args="--help -h --firebase -f --message -m" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    use)
      args="-h --help --add --alias --unalias --clear "
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    open)
      args="--help -h" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    login:ci )
      args="--help -h --no-localhost" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    login )
      args="--help --email --password" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    use)
      args="--help -h --add --alias --unalias --clear " 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    logout )
      args="--help -h -d " 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    --deploy)
      args="hosting storage"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    --project|-P|--alias|--unalias)
      args=$(firebase list -j|jq .result[].id)
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    database:profile )
      args="-h --help -o --output -d --duration --raw -i --input "
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    database:* )
      args="--project -P" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    emulators:start )
      args="-h --help --inspect-functions --only"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    -f|--firebase)
      args=$(firebase list|awk '{if(NR>2) {print $2}}'|grep -v '^$')
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

	esac
  
  COMPREPLY=($(compgen -W "${commands}" -- "${cur}"))
  __ltrim_colon_completions "$cur"
  return 0
}

complete -F _firebase firebase

